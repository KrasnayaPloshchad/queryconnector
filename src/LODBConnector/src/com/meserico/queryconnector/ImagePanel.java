/*
    QueryConnector - Attach a query to a Calc document
    Copyright (C) 2013 Enrico Giuseppe Messina

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */
package com.meserico.queryconnector;

import java.awt.AlphaComposite;
import java.awt.Composite;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import javax.imageio.ImageIO;
import javax.swing.JPanel;

/**
 *
 * @author Enrico Messina
 */
public class ImagePanel extends JPanel {

    private Image image;
    private float alpha;
    
    /**
     * Creates new form ImagePanel
     */
    public ImagePanel() {
        initComponents();
        this.alpha = 1.0f;
    }
    
    public void setImage(Image image){
        this.image = image;
    }
    
    public void setImage(String resourceName){
        try{
            this.image = ImageIO.read(this.getClass().getResourceAsStream(resourceName));
        }catch(Exception ex){
            this.image = null;
        }
    }
    
    public void setImageFromPackage(String imageName){
        this.setImage("/com/meserico/queryconnector/" + imageName);
    }
    
    public void setImageAlpha(float alpha){
        this.alpha = alpha;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2 = (Graphics2D) g;
        
        if(this.image != null){
            int x_pos = (this.getWidth() - this.image.getWidth(null))/2;
            int y_pos = (this.getHeight() - this.image.getHeight(null)) - 20;
            
            AlphaComposite composite = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, alpha);
            Composite old = g2.getComposite();
            g2.setComposite(composite);
            g.drawImage(image, x_pos, y_pos, null);
            g2.setComposite(old);
        }
    }
}
